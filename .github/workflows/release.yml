name: CI

on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    tags:
      - 'v*'

permissions:
  pull-requests: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Update and upgrade apt packages
      run: |
        sudo apt update

    - name: Install required apt packages
      run: |
        sudo apt install -y python3-pyqt5
        sudo apt install -y pyqt5-dev-tools
        sudo apt install -y qttools5-dev-tools

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Run action.py
      run: python action.py

    - name: Rename builded.py to playblast_ffmpeg.py
      run: mv builded.py playblast_ffmpeg.py

    - name: Comment on PR with playblast_ffmpeg.py content
      run: |
        gh auth login --with-token <<< "${{ secrets.GITHUB_TOKEN }}"
        CONTENT=$(cat playblast_ffmpeg.py)
        gh pr comment ${{ github.event.pull_request.number }} --body "### Generated playblast_ffmpeg.py\n\`\`\`python\n$CONTENT\n\`\`\`"

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Update and upgrade apt packages
      run: |
        sudo apt update

    - name: Install required apt packages
      run: |
        sudo apt install -y python3-pyqt5
        sudo apt install -y pyqt5-dev-tools
        sudo apt install -y qttools5-dev-tools

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Run action.py
      run: python action.py

    - name: Rename builded.py to playblast_ffmpeg.py
      run: mv builded.py playblast_ffmpeg.py

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: playblast_ffmpeg.py
        asset_name: playblast_ffmpeg.py
        asset_content_type: application/octet-stream